
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isSigningUp(userId) {
      return !exists(/databases/$(database)/documents/users/$(userId))
             && request.auth.uid == userId;
    }

    // USERS Collection
    // Users can read their own data.
    // New users can create their own user document.
    // Users can update their own username.
    match /users/{userId} {
      allow read: if isSignedIn() && isOwner(userId);
      allow create: if isSigningUp(userId);
      allow update: if isSignedIn() && isOwner(userId);
    }

    // PROFILES Collections
    // New users can create their own profile document.
    // Users can read/update their own profile.
    // All users can read other shop owner profiles (for viewing).
    match /homeownerProfiles/{userId} {
       allow read, update: if isSignedIn() && isOwner(userId);
       allow create: if isSigningUp(userId);
    }

    match /shopOwnerProfiles/{userId} {
       allow read, update: if isSignedIn() && isOwner(userId);
       allow create: if isSigningUp(userId);
    }

    // REQUIREMENTS Collection
    // Homeowners can create/read/update/delete their own requirements.
    // Shop owners can read all 'Open' requirements.
    match /requirements/{requirementId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.homeownerId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.homeownerId == request.auth.uid;
    }

    // QUOTATIONS Collection
    // Shop owners can create/update their own quotations.
    // Homeowners can read quotations linked to their requirements.
    match /quotations/{quotationId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.shopOwnerId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.shopOwnerId == request.auth.uid;
    }
    
    // UPDATES Collection
    // Any signed-in user can read all updates.
    // Any signed-in user can create an update.
    // Only the original author can update or delete their post.
    match /updates/{updateId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
        allow update, delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
    }
  }
}
