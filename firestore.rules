
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read their own user data and create their own user document upon sign-up.
    // Users can update their own username.
    match /users/{userId} {
      allow read: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && request.resource.data.keys().hasOnly(['username']);
    }

    // Homeowner profile rules
    match /homeownerProfiles/{userId} {
      allow read: if request.auth != null; // Allow any logged-in user to read
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }
    
    // Shop Owner profile rules
    match /shopOwnerProfiles/{userId} {
      allow read: if request.auth != null; // Allow any logged-in user to read
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // Requirements rules
    match /requirements/{requirementId} {
      // Any authenticated user can read requirements (for shop owners' dashboard)
      allow read: if request.auth != null;
      
      // Homeowners can create, update, and delete their own requirements
      allow create: if request.auth.uid == request.resource.data.homeownerId;
      allow update, delete: if request.auth.uid == resource.data.homeownerId;
    }
    
    // Quotations rules
    match /quotations/{quotationId} {
      // Shop owners can create quotations.
      allow create: if request.auth.uid == request.resource.data.shopOwnerId;
      
      // Shop owners can update their own quotations.
      allow update: if request.auth.uid == resource.data.shopOwnerId;

      // Homeowners can read quotations for their requirements.
      // This is checked by getting the requirement document and verifying the owner.
      allow read: if get(/databases/$(database)/documents/requirements/$(resource.data.requirementId)).data.homeownerId == request.auth.uid
                   || request.auth.uid == resource.data.shopOwnerId; // Shop owner can read their own quote
    }
    
    // Community Updates rules
    match /updates/{updateId} {
        // Any authenticated user can read updates.
        allow read: if request.auth != null;
        
        // Any authenticated user can create an update.
        allow create: if request.auth.uid == request.resource.data.authorId;
        
        // Only the author can update or delete their own post.
        allow update, delete: if request.auth.uid == resource.data.authorId;
    }
  }
}
