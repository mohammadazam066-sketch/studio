rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is the owner of a document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can be created by anyone during sign up, but can only be read/updated by the owner.
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow create: if isOwner(userId);
      // Allow a user to update their own data, but not change their role.
      allow update: if isOwner(userId) && request.resource.data.role == resource.data.role;
    }

    // Profiles can be read by any authenticated user, but only updated by the owner.
    match /homeownerProfiles/{userId} {
      allow read: if request.auth != null;
      allow create, update: if isOwner(userId);
    }
    match /shopOwnerProfiles/{userId} {
      allow read: if request.auth != null;
      allow create, update: if isOwner(userId);
    }

    // Requirements can be read by any authenticated user.
    // Homeowners can create/update/delete their own requirements.
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.homeownerId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.homeownerId == request.auth.uid;
    }

    // Quotations can be created/updated by the shop owner who owns it.
    // They can be read by the shop owner who owns it, or the homeowner who owns the parent requirement.
    match /quotations/{quotationId} {
      allow read: if request.auth != null && (resource.data.shopOwnerId == request.auth.uid || get(/databases/$(database)/documents/requirements/$(resource.data.requirementId)).data.homeownerId == request.auth.uid);
      allow create: if request.auth != null && request.resource.data.shopOwnerId == request.auth.uid;
      allow update: if request.auth != null && resource.data.shopOwnerId == request.auth.uid;
      allow delete: if false; // Quotations cannot be deleted for now.
    }

    // Updates can be read by anyone. They can be created by any authenticated user.
    // They can only be updated/deleted by the original author.
    match /updates/{updateId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }
  }
}
