rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isSigningUp(userId) {
      // Allow if the user is creating their own user document.
      return isOwner(userId);
    }
    
    // --- User and Profile Rules ---

    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSigningUp(userId);
      allow update: if isOwner(userId);
    }
    
    match /shopOwnerProfiles/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isOwner(userId);
    }

    match /homeownerProfiles/{userId} {
      allow read, create, update: if isOwner(userId);
    }

    // --- Requirement Rules ---
    match /requirements/{requirementId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.homeownerId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.homeownerId == request.auth.uid;
    }
    
    // --- Quotation Rules ---
    match /quotations/{quotationId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.shopOwnerId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.shopOwnerId == request.auth.uid;
    }

    // --- Updates Feed Rules ---
    match /updates/{updateId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
    }
  }
}
