rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // --- User and Profile Rules ---
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      // Allow user creation if the user is signing up and the ID matches.
      allow create: if isOwner(userId);
    }
    
    match /shopOwnerProfiles/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isOwner(userId);
    }

    // --- ADDED: Missing rules for homeowner profiles ---
    match /homeownerProfiles/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isOwner(userId);
    }

    // --- Requirement and Quotation Rules ---
    match /requirements/{requirementId} {
      allow read: if isSignedIn();
      // On create, check the incoming document's ID
      allow create: if isOwner(request.resource.data.homeownerId);
      // On update/delete, check the existing document's ID
      allow update, delete: if isOwner(resource.data.homeownerId);
    }
    
    match /quotations/{quotationId} {
      allow read: if isOwner(resource.data.shopOwnerId) || 
                   isOwner(get(/databases/$(database)/documents/requirements/$(resource.data.requirementId)).data.homeownerId);
      
      allow create: if isOwner(request.resource.data.shopOwnerId);
      allow update: if isOwner(resource.data.shopOwnerId);
    }

    // --- Updates Feed Rules ---
    match /updates/{updateId} {
      allow read: if isSignedIn();
      allow create: if isOwner(request.resource.data.authorId);
      allow update, delete: if isOwner(resource.data.authorId);
    }
  }
}
