rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is the owner of a document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- User and Profile Rules ---

    // Users can create, read, and update their own user document.
    match /users/{userId} {
      allow create, read, update: if isOwner(userId);
    }
    
    // Shop owners can create and write to their own profile.
    // Any authenticated user can read a shop owner's profile (e.g., to see details on a quote).
    match /shopOwnerProfiles/{userId} {
      allow read: if request.auth != null;
      allow create, write: if isOwner(userId);
    }

    // Homeowners can create and write to their own profile.
    match /homeownerProfiles/{userId} {
      allow read: if request.auth != null;
      allow create, write: if isOwner(userId);
    }

    // --- Requirement and Quotation Rules ---

    // Any authenticated user can read requirements (for the dashboard feeds).
    // Only the owner can create, update, or delete their own requirement.
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create: if isOwner(request.resource.data.homeownerId);
      allow update, delete: if isOwner(resource.data.homeownerId);
    }
    
    // For QUOTATIONS, the most complex rule:
    // A user can read a quotation if they are the shop owner who made it,
    // OR if they are the homeowner for the associated requirement.
    // This rule allows both direct reads and the necessary queries.
    match /quotations/{quotationId} {
      allow read: if isOwner(resource.data.shopOwnerId) || 
                   isOwner(get(/databases/$(database)/documents/requirements/$(resource.data.requirementId)).data.homeownerId);
      
      // Only the shop owner can create or update a quotation.
      allow create, update: if isOwner(request.resource.data.shopOwnerId);
    }

    // --- Updates Feed Rules ---
    
    // Any authenticated user can read update posts.
    // Only the author can create, update, or delete their own post.
    match /updates/{updateId} {
      allow read: if request.auth != null;
      allow create: if isOwner(request.resource.data.authorId);
      allow update, delete: if isOwner(resource.data.authorId);
    }
  }
}
